service: voice-foundry-testing
# app and org for use with dashboard.serverless.com
app: voice-foundry-v1
org: nahums

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "1"

provider:
  name: aws
  runtime: nodejs12.x

  # you can overwrite defaults here
  stage: dev
  region: us-east-1

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
        - "s3:ListBucket"
        - "s3:DeleteObject"
        - "s3:PutObject"
        - "s3:GetObject"
      Resource: { "Fn::Join": ["", ["arn:aws:s3:::vf-sample-data"]] }

# you can define service wide environment variables here
# environment:
#   BUCKET: vf-sample-data

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
  analyzeData:
    handler: handler.analyzeData

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    sentimentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ChatSentimentTable
        AttributeDefinitions:
          - AttributeName: uid
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: uid
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DataSource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: vf-sample-data
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

plugins:
  - serverless-s3-deploy
  # - vf-plugin
custom:
  remover:
    buckets:
      - vf-sample-data
  assets:
    auto: true
    targets:
      - bucket:
          Ref: DataSource
        empty: true
        acl: public-read
        files:
          - source: ./data/
            defaultContentType: application/json
            globs: "sample-data.json"
